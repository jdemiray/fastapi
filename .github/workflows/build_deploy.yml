# name: Build on Deploy Code

# on: [push, pull_request]

# jobs:
#   build:
#     environment:
#       name: testing
#     env:
#       DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
#       DATABASE_PORT: ${{secrets.DATABASE_PORT}}
#       DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#       DATABASE_NAME: ${{secrets.DATABASE_NAME}}
#       DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
#       SECRET_KEY: ${{secrets.SECRET_KEY}}
#       ALGORITHM: ${{secrets.ALGORITHM}}
#       ACCESS_TOKEN_EXPIRE_MINUTES: 60

#     services:
#       postgres:
#         image: postgres
#         env:
#           POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#           POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     runs-on: ubuntu-latest
#     steps:
#       - name: pulling git repo
#         uses: actions/checkout@v3

#       - name: Setup Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.13'

#       - name: Update pip  
#         run: python -m pip install --upgrade pip

#       - name: Install all dependencies
#         run: pip install -r requirements.txt

#       - name: test with pytest
#         run: |
#           pip install pytest
#           pytest tests/

      # Uncomment the following if Docker build and push is needed
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      #   with:
      #     driver-opts: network=host

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      # - name: Build and Push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapi:latest

      # - name: Image digest
      #   run: echo ${{steps.docker_build.outputs.digest}}
name: Deploy Code

on: [push, pull_request]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
  
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      - name: Deploying to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
